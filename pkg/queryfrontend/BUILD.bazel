load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

proto_library(
    name = "queryfrontend_proto",
    srcs = ["response.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "//gogoproto:gogoproto_proto",
        "//store/labelpb:labelpb_proto",
    ],
)

go_proto_library(
    name = "queryfrontend_go_proto",
    importpath = "github.com/thanos-io/thanos/pkg/queryfrontend",
    proto = ":queryfrontend_proto",
    visibility = ["//visibility:public"],
    deps = [
        "//gogoproto:gogo_proto",
        "//store/labelpb:types_proto",
    ],
)

go_library(
    name = "queryfrontend",
    srcs = [
        "cache.go",
        "config.go",
        "downsampled.go",
        "labels_codec.go",
        "queryrange_codec.go",
        "request.go",
        "response.go",
        "roundtrip.go",
        "split_by_interval.go",
    ],
    embed = [":queryfrontend_go_proto"],
    importpath = "github.com/thanos-io/thanos/pkg/queryfrontend",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/api/query",
        "//pkg/cacheutil",
        "//pkg/compact/downsample",
        "//pkg/model",
        "//pkg/store/labelpb",
        "//pkg/store/storepb",
        "@com_github_cortexproject_cortex//pkg/chunk/cache",
        "@com_github_cortexproject_cortex//pkg/frontend/transport",
        "@com_github_cortexproject_cortex//pkg/querier/queryrange",
        "@com_github_cortexproject_cortex//pkg/util",
        "@com_github_cortexproject_cortex//pkg/util/spanlogger",
        "@com_github_cortexproject_cortex//pkg/util/validation",
        "@com_github_efficientgo_tools_extkingpin//:extkingpin",
        "@com_github_go_kit_kit//log",
        "@com_github_go_kit_kit//log/level",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_opentracing_opentracing_go//log",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_prometheus//pkg/labels",
        "@com_github_prometheus_prometheus//pkg/timestamp",
        "@com_github_prometheus_prometheus//promql/parser",
        "@com_github_weaveworks_common//httpgrpc",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
)

go_test(
    name = "queryfrontend_test",
    srcs = [
        "cache_test.go",
        "downsampled_test.go",
        "labels_codec_test.go",
        "queryrange_codec_test.go",
        "roundtrip_test.go",
    ],
    embed = [":queryfrontend"],
    deps = [
        "//pkg/api/query",
        "//pkg/compact",
        "//pkg/store/labelpb",
        "//pkg/testutil",
        "@com_github_cortexproject_cortex//pkg/chunk/cache",
        "@com_github_cortexproject_cortex//pkg/cortexpb",
        "@com_github_cortexproject_cortex//pkg/querier/queryrange",
        "@com_github_cortexproject_cortex//pkg/util/validation",
        "@com_github_go_kit_kit//log",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_prometheus//pkg/labels",
        "@com_github_prometheus_prometheus//promql/parser",
        "@com_github_weaveworks_common//httpgrpc",
        "@com_github_weaveworks_common//user",
    ],
)
