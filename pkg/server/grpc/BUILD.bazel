load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "grpc",
    srcs = [
        "grpc.go",
        "option.go",
    ],
    importpath = "github.com/thanos-io/thanos/pkg/server/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/component",
        "//pkg/prober",
        "//pkg/tracing",
        "@com_github_go_kit_kit//log",
        "@com_github_go_kit_kit//log/level",
        "@com_github_grpc_ecosystem_go_grpc_middleware_providers_kit_v2//:kit",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//:go-grpc-middleware",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/logging",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/recovery",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/tags",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go-grpc-prometheus",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_grpc//status",
    ],
)
