load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "grpc",
    srcs = [
        "grpc.go",
        "option.go",
    ],
    importpath = "github.com/thanos-io/thanos/pkg/server/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/component",
        "//pkg/prober",
        "//pkg/tracing",
        "@com_github_go_kit_kit//log:go_default_library",
        "@com_github_go_kit_kit//log/level:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/logging:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/recovery:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/tags:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//credentials:go_default_library",
        "@org_golang_google_grpc//health/grpc_health_v1:go_default_library",
        "@org_golang_google_grpc//reflection:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)
